(deffacts datos
	(numero 5 3 8 14 7)
	(numero 3)
	(numero 8)
	(numero 14)
	(numero 7)
	(variable 0)
	(objetivo 21)
)

(defrule sumar
	(numero ?primero ?segundo ?tercero? cuarto? ?quinto)
	(variable ?v)
	(not (objetivo = ?n))
=>
    	(assert (variable (+ ?v ?n)))
    	(printout t "SUMAMOS y obtenemos ?v" crlf)
)

(defrule restar
	(numero ?primero ?segundo ?tercero? cuarto? ?quinto)
	(variable ?v)
	(?v = (?primero * ?segundo))
	(not (objetivo = ?n))
=>
    	(assert (variable (div(?n ))))
    	(printout t "RESTAMOS y obtenemos ?v" crlf)
)

(defrule multiplicar
	(numero ?primero ?segundo ?tercero? cuarto? ?quinto)
	(variable ?v)
	(?v = (?primero * ?segundo))
	(not (objetivo = ?v))
=>
    	(assert (variable ?v))
    	(printout t "MULTIPLICAMOS y obtenemos ?v" crlf)
)

(defrule dividir
	(numero ?primero ?segundo ?tercero? cuarto? ?quinto)
	(variable ?v)
	(not (objetivo = ?n))
=>
    	(assert (variable (+ ?v ?n)))
    	(printout t "DIVIDIMOS y obtenemos ?v" crlf)
)

(defrule solucion
	(salience 99)
	(variable ?v)
	(objetivo ?o)
	(test (= ?v ?o))
=>
    	(printout t "YA TENEMOS EL OBJETIVO" crlf)
	(printout t "FIN" crlf)
    	(halt)
)